openapi: 3.0.3
info:
  title: Zara Wishlist API
  description: API para la gestión de listas de deseos - MVP
  version: 1.0.0
  contact:
    name: Zara Ecommerce Team
    email: api@zara.com

servers:
  - url: https://api.zara.com/v1
    description: Production server
  - url: https://staging-api.zara.com/v1
    description: Staging server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: string

    Product:
      type: object
      properties:
        id:
          type: string
          example: "prod_123456"
        name:
          type: string
          example: "VESTIDO MIDI SATINADO"
        price:
          type: object
          properties:
            current:
              type: number
              format: float
              example: 29.95
            original:
              type: number
              format: float
              example: 39.95
            currency:
              type: string
              example: "EUR"
        images:
          type: array
          items:
            type: string
            format: uri
          example: ["https://image1.jpg", "https://image2.jpg"]
        available:
          type: boolean
          example: true
        url:
          type: string
          format: uri
          example: "https://zara.com/vestido-midi-satinado"

    WishlistItem:
      type: object
      properties:
        id:
          type: string
          example: "wish_item_789"
        product:
          $ref: '#/components/schemas/Product'
        added_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        size:
          type: string
          example: "M"
        color:
          type: string
          example: "NEGRO"

    Wishlist:
      type: object
      properties:
        id:
          type: string
          example: "wish_123"
        user_id:
          type: string
          example: "user_456"
        name:
          type: string
          example: "Mi lista de deseos"
        items:
          type: array
          items:
            $ref: '#/components/schemas/WishlistItem'
        items_count:
          type: integer
          example: 5
        created_at:
          type: string
          format: date-time
          example: "2024-01-10T15:20:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

    AddToWishlistRequest:
      type: object
      required:
        - product_id
      properties:
        product_id:
          type: string
          example: "prod_123456"
        size:
          type: string
          example: "M"
        color:
          type: string
          example: "NEGRO"

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
        message:
          type: string

paths:
  # =============================================
  # WISHLIST MANAGEMENT
  # =============================================
  /wishlist:
    get:
      summary: Obtener la wishlist del usuario
      description: Retorna todos los items en la wishlist del usuario autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Wishlist obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wishlist'
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "UNAUTHORIZED"
                message: "Token de autenticación inválido"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Añadir producto a la wishlist
      description: Añade un producto a la wishlist del usuario
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToWishlistRequest'
      responses:
        '201':
          description: Producto añadido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Producto añadido a tu wishlist"
                data:
                  wishlist_item_id: "wish_item_789"
        '400':
          description: Solicitud inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: El producto ya está en la wishlist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wishlist/items/{item_id}:
    delete:
      summary: Eliminar producto de la wishlist
      description: Elimina un producto específico de la wishlist del usuario
      security:
        - bearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Producto eliminado de tu wishlist"
        '404':
          description: Item no encontrado en la wishlist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wishlist/clear:
    delete:
      summary: Vaciar toda la wishlist
      description: Elimina todos los productos de la wishlist del usuario
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Wishlist vaciada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Wishlist vaciada"

  # =============================================
  # WISHLIST ACTIONS
  # =============================================
  /wishlist/items/{item_id}/move-to-cart:
    post:
      summary: Mover producto al carrito
      description: Mueve un producto de la wishlist al carrito de compras
      security:
        - bearerAuth: []
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto movido al carrito exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "Producto añadido al carrito"
                data:
                  cart_item_id: "cart_item_456"
        '404':
          description: Item no encontrado en la wishlist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wishlist/move-all-to-cart:
    post:
      summary: Mover todos los productos al carrito
      description: Mueve todos los productos disponibles de la wishlist al carrito
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Productos movidos al carrito exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                success: true
                message: "3 productos añadidos al carrito"
                data:
                  moved_items: 3
                  failed_items: 0

  # =============================================
  # PRODUCT INTEGRATION
  # =============================================
  /products/{product_id}/wishlist-status:
    get:
      summary: Verificar estado en wishlist
      description: Verifica si un producto está en la wishlist del usuario
      security:
        - bearerAuth: []
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Estado obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  in_wishlist:
                    type: boolean
                  wishlist_item_id:
                    type: string
                    nullable: true
        '401':
          description: No autorizado

  # =============================================
  # ANALYTICS (Interno - para BI/Marketing)
  # =============================================
  /internal/wishlist/metrics:
    get:
      summary: Métricas de wishlist (Interno)
      description: Endpoint interno para obtener métricas de uso de wishlist
      security:
        - bearerAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
          description: Fecha de inicio para el reporte
        - name: end_date
          in: query
          schema:
            type: string
            format: date
          description: Fecha de fin para el reporte
      responses:
        '200':
          description: Métricas obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_users_with_wishlist:
                    type: integer
                  total_items_in_wishlists:
                    type: integer
                  avg_items_per_user:
                    type: number
                    format: float
                  most_added_products:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: string
                        product_name:
                          type: string
                        add_count:
                          type: integer 